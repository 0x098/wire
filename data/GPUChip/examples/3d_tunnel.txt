// Author: Drunkie
// Description: Draws a never ending tunnel in 3D!

Main();

#include <drivers\drv_gl.txt>

float i;
float zTranslate;

void Main()
{
    glSleep( 60 ); // Sleep for 60 milliseconds (reduces fps lag)
    glClear( 0, 0, 0 ); // Clear screen
    
    glCoordPipe( 3 ); // Set coordinate pipe
    glVertexPipe( 5 ); // Set vertex pipe

    glLightPos( -1, -1, -1 ); // Set the light position
    glLightColor( 255, 255, 255, 1.25 ); // Set the light color
   
    // Create our lookat and perspective matrices
    glLookAt( mViewMatrix, vLookAt );
    glPerspective( mProjectionMatrix, vPerspective );

    // Loop 4 times and draw 4 models
    for (i = 0; i < 4; i++)
    {
        // Set translations for each model
        timer zTranslate;
        mul zTranslate,-16;
        mod zTranslate,*vScale.z * 2;
        *vTranslate.z = zTranslate + (*vScale.z * 2 * i);
        
        // Set transformation matrices
        glRotateMatrix( mRotateMatrix, vRotate );
        glTranslateMatrix( mTranslateMatrix, vTranslate );
        glScaleMatrix( mScaleMatrix, vScale );
        
        // Perform matrix transformations
        mmov mModelMatrix,mTranslateMatrix;
        mmul mModelMatrix,mRotateMatrix;
        mmul mModelMatrix,mScaleMatrix;
        mmov mModelViewMatrix,mViewMatrix;
        mmul mModelViewMatrix,mModelMatrix;
        
        // Load model anf projection matrices
        glLoadMatrix( mModelViewMatrix );
        glLoadProjection( mProjectionMatrix );

        // Wireframe 3D polygon
        glLineWidth( 1 ); // Set line width of wireframe
        glEnable( 1, 0, 0, 0, 0 ); // Enable parameters (denable)
        glFillMode( FILLMODE_WIREFRAME ); // Enable wireframe
        glColor4( 255, 255, 255, 255 ); // Set the draw color
        glPoly3D( TunnelModel, 8 ); // Draw 3D polygon
        
        // Solid 3D polygon
        glEnable( 1, 1, 1, 0, 0 ); // Enable parameters (denable)
        glFillMode( FILLMODE_SOLID ); // Set fillmode as solid
        glColor4( 255, 255, 255, 150 ); // Set draw color
        glPoly3D( TunnelModel, 8 ); // Draw 3D polygon 
        
         glFlush(); // Send our vertex buffer to screen
    }

    glExit(); // Exit
}

TunnelModel:
db 1,1,-1; db -1,1,-1; db 1,1,1;
db -1,1,-1; db -1,1,1; db 1,1,1;
db 1,1,-1; db 1,1,1; db 1,-1,-1;
db 1,-1,-1; db 1,1,1; db 1,-1,1;
db -1,1,-1; db -1,-1,-1; db -1,1,1;
db -1,-1,-1; db -1,-1,1; db -1,1,1; 
db 1,-1,-1; db 1,-1,1; db -1,-1,-1;
db -1,-1,-1; db 1,-1,1; db -1,-1,1;

matrix mRotateMatrix;
matrix mTranslateMatrix;
matrix mScaleMatrix;
matrix mProjectionMatrix;
matrix mViewMatrix;
matrix mModelMatrix;
matrix mModelViewMatrix;

vec4f vRotate,      0,  0,  0,  0; // <AXIS X Y Z> <ANGLE W>
vec4f vTranslate,   0,  0,  0,  0; // <TRANSLATION X Y Z> <0>
vec4f vPerspective, 8, 1,  0.4,  20; // <FOV> <ASPECT RATIO> <ZNEAR> <ZFAR>
vec4f vScale,       1,  1,  8,  0; // <SCALE X Y Z> <0>

vLookAt:
vec3f vLookAt_Eye,    0, 0, -25; // Where our camera is
vec3f vLookAt_Center, 0, 0, 0;  // What we look at
vec3f vLookAt_Up,     0, 1, 0;  // Where our matt-hat is

